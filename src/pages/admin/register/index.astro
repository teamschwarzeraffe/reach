---
import { convertFormDataToObject } from "../../../services/utils";
import LoginLayout from "../layouts/admin-login.astro";
import SonicJsLogo from "../../../../public/images/sonicjs-logo.svg";
import { Image } from "astro:assets";
import { sendEmail } from "../../../services/email";
import { doesAdminAccountExist } from "@services/auth";

let isAdminAccountCreated = await doesAdminAccountExist(Astro.locals.runtime.env.D1) ;
console.log('isAdminAccountCreated register', isAdminAccountCreated)
if(!isAdminAccountCreated){
  Astro.locals.runtime.env.isAdminAccountCreated = false;
}


if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    let data: { role?: string } = convertFormDataToObject(formData);
    if(!isAdminAccountCreated){
      data.role = "admin";
    }
    var json = JSON.stringify({data});

    console.log('json register', json)

    //send email
    // sendEmail({
    //   to: data.email,
    //   subject: "Welcome to SonicJs",
    //   html: "You have successfully registered your admin account",
    // });

    //now post to our own post api
    debugger;
    const baseURl = Astro.request.url.split("/admin/")[0];
    const postUrl = `${baseURl}/api/v1/users`;
    try {
      const response = await fetch(postUrl, {
        method: "POST",
        body: json,
      });
      if (!response.ok) {
        throw new Error("Network response was not ok");
      }
      const result = await response.json();
      console.log("Success:", result);
    } catch (error) {
      console.error("Error:", error);
    }

    // Do something with the data
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  } finally {
    return Astro.redirect(`/admin`);
  }
}
---

<!--
  This example requires some changes to your config:
  
  ```
  // tailwind.config.js
  module.exports = {
    // ...
    plugins: [
      // ...
      require('@tailwindcss/forms'),
    ],
  }
  ```
--><!--
  This example requires updating your template:

  ```
  <html class="h-full bg-gray-900">
  <body class="h-full">
  ```
-->
<LoginLayout title="Login: SonicJs Admin">
  <div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-sm">
      <Image
        src={SonicJsLogo}
        class="mx-auto h-10 w-auto"
        format="svg"
        alt="Logo"
        height={26}
        loading="lazy"
      />

      <h2
        class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-white"
      >
        Register your admin account
      </h2>
    </div>

    <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
      <form class="space-y-6" action="#" method="POST">

        <div>
          <label
            for="firstName"
            class="block text-sm font-medium leading-6 text-white"
            >First Name</label
          >
          <div class="mt-2">
            <input
              id="firstName"
              name="firstName"
              type="text"
              autocomplete="firstName"
              value="John"
              required
              class="block w-full rounded-md border-0 bg-white/5 py-1.5 text-white shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <label
            for="lastName"
            class="block text-sm font-medium leading-6 text-white"
            >Last Name</label
          >
          <div class="mt-2">
            <input
              id="lastName"
              name="lastName"
              type="text"
              autocomplete="lastName"
              value="Doe"
              required
              class="block w-full rounded-md border-0 bg-white/5 py-1.5 text-white shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        
        <div>
          <label
            for="email"
            class="block text-sm font-medium leading-6 text-white"
            >Email address</label
          >
          <div class="mt-2">
            <input
              id="email"
              name="email"
              type="email"
              autocomplete="email"
              required
              class="block w-full rounded-md border-0 bg-white/5 py-1.5 text-white shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <div class="flex items-center justify-between">
            <label
              for="password"
              class="block text-sm font-medium leading-6 text-white"
              >Password</label
            >
           
          </div>
          <div class="mt-2">
            <input
              id="password"
              name="password"
              type="password"
              autocomplete="current-password"
              required
              class="block w-full rounded-md border-0 bg-white/5 py-1.5 text-white shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <button
            type="submit"
            class="flex w-full justify-center rounded-md bg-indigo-500 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500"
            >Register</button
          >
        </div>
      </form>

      <p class="mt-10 text-center text-sm text-gray-400">
        Need help?
        <a
          href="https://discord.gg/8bMy6bv3sZ"
          target="_blank"
          class="font-semibold leading-6 text-indigo-400 hover:text-indigo-300"
          >Join us on Discord</a
        >
      </p>
    </div>
  </div>
</LoginLayout>
