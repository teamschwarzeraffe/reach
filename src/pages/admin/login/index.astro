---
import { convertFormDataToObject } from "@services/utils";
import LoginLayout from "../layouts/admin-login.astro";
import { setSessionTokenCookie } from "@services/cookies";
import { doesAdminAccountExist } from "@services/auth";
import { Image } from "astro:assets";
import SonicJsLogo from "../../../../public/images/sonicjs-logo.svg";

//check if there is an admin account, if not redirect admin to register
let isAdminAccount = await doesAdminAccountExist(Astro.locals.runtime.env.D1);
console.log("isAdminAccount login", isAdminAccount);

if (isAdminAccount === false) {
  return Astro.redirect(`/admin/register`);
}

// for the demo only
let defaultEmail = "";
let defaultPassword = "";
if (Astro.request.url.includes("demo.sonicjs.com")) {
  defaultEmail = "demo@demo.com";
  defaultPassword = "sonicjs!";
}

if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const data = convertFormDataToObject(formData);
    var json = JSON.stringify(data);

    //send email
    // sendEmail({
    //   to: data.email,
    //   subject: "Welcome to SonicJs",
    //   html: "You have successfully registered your admin account",
    // });

    //now post to our own post api
    const baseURl = Astro.request.url.split("/admin/")[0];
    const postUrl = `${baseURl}/api/v1/auth/login`;
    try {
      const response = await fetch(postUrl, {
        headers: new Headers({ "content-type": "application/json" }),
        method: "POST",
        body: json,
      });
      // if (!response.ok) {
      //   throw new Error("Network response was not ok");
      // }
      const result = (await response.json()) as {
        bearer: string;
        expires: number;
      };
      console.log("Success:", result);

      //add auth cookie
      setSessionTokenCookie(Astro, result.bearer, result.expires);
    } catch (error) {
      console.error("Error:", error);
    }

    // Do something with the data
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  } finally {
    return Astro.redirect(`/admin`);
  }
}

---

<LoginLayout title="Login: SonicJs Admin">
  <div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-sm">
      <Image
        src={SonicJsLogo}
        class="mx-auto h-10 w-auto"
        format="svg"
        alt="Logo"
        height={26}
        loading="lazy"
      />
      <h2
        class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-white"
      >
        Sign in to your account
      </h2>
    </div>

    <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
      <form class="space-y-6" action="#" method="POST">
        <div>
          <label
            for="email"
            class="block text-sm font-medium leading-6 text-white"
            >Email address</label
          >
          <div class="mt-2">
            <input
              id="email"
              name="email"
              type="email"
              autocomplete="email"
              value={defaultEmail}
              required
              class="block w-full rounded-md border-0 bg-white/5 py-1.5 text-white shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <div class="flex items-center justify-between">
            <label
              for="password"
              class="block text-sm font-medium leading-6 text-white"
              >Password</label
            >
            <div class="text-sm">
              <a
                href="#"
                class="font-semibold text-indigo-400 hover:text-indigo-300"
                >Forgot password?</a
              >
            </div>
          </div>
          <div class="mt-2">
            <input
              id="password"
              name="password"
              type="password"
              autocomplete="current-password"
              value={defaultPassword}
              required
              class="block w-full rounded-md border-0 bg-white/5 py-1.5 text-white shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <button
            type="submit"
            class="flex w-full justify-center rounded-md bg-indigo-500 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500"
            >Sign in</button
          >
        </div>
      </form>

      <p class="mt-10 text-center text-sm text-gray-400">
        No account yet?
        <a
          href="/admin/register"
          class="font-semibold leading-6 text-indigo-400 hover:text-indigo-300"
          >Register</a
        >
      </p>
    </div>
  </div>
</LoginLayout>
